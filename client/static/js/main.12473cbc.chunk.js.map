{"version":3,"sources":["hooks/useLocalStore.js","hooks/useAccount.js","hooks/useLoadingState.js","hooks/useResponse.js","hooks/useNotes.js","hooks/useAppTheme.js","context.js","hooks/useStyles.js","components/Login.js","components/Register.js","components/Header.js","components/Profile.js","components/Notes.js","components/Home.js","Themeify.js","App.js","index.js","assets/images/logo.svg","assets/images/user.svg"],"names":["useLocalStore","setTokenToStore","token","localStorage","setItem","getTokenFromStore","getItem","useAccount","InitialState","_id","firstName","lastName","email","mobileNumber","password","profilePic","useState","user","setUser","localStore","handleSignUp","a","axios","post","then","res","catch","err","console","log","handleSignIn","validateStatus","data","accessToken","authenticateUser","authToken","get","headers","authorization","status","clear","response","handleUserFieldChange","e","target","name","value","prevUser","handleUpdateUser","logOutUser","handleProfilePicChange","file","formData","FormData","append","Date","now","useLoadingState","defaultLoadingState","isLoading","setIsLoading","useResponse","useNotes","title","body","image","noteColor","isNotePicDeleted","createdAt","updatedAt","creator","notes","setNotes","note","setNote","setResponse","loadNotes","finally","resetResponse","handleNoteFieldChange","type","files","handlenotePicDelete","val","prevNote","handleNoteFocus","addEditNotes","deleteNote","useAppTheme","appTheme","setAppTheme","Context","React","createContext","ContextProvider","props","useForm","register","handleSubmit","errors","accountObj","localStoreObj","notesObj","appThemeObj","Provider","children","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","invalid","color","red","primarytheme","palette","primary","main","paper","padding","textAlign","text","secondary","textField","btnUploadProfilePic","position","background","boxShadow","fab","bottom","right","infocardRoot","maxWidth","display","alignItems","justifyContent","infocardavatar","width","filter","notecardRoot","card_content","Login","useContext","classes","useTheme","login","to","className","noValidate","src","Logo","alt","Grid","container","item","lg","TextField","fullWidth","label","onChange","inputRef","required","message","pattern","error","Button","variant","onClick","style","Alert","severity","elevation","Register","signup","alert","maxLength","minLength","Header","profileImage","trim","defaultImg","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","Toolbar","edge","aria-label","Avatar","Typography","marginLeft","IconButton","aria-haspopup","prevTheme","class","aria-controls","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Profile","isDisabled","setIsDisabled","setProfilePic","fuRef","useRef","handleFieldChange","CssBaseline","data-parallax","Paper","accept","ref","fileSize","Math","round","size","exec","current","reader","FileReader","readAsDataURL","onloadend","result","hidden","click","defaultValue","disabled","NoteItem","noteImg","Notes","show","setShow","colRef","fileRef","notePic","setNotePic","useEffect","noteItems","sort","b","map","key","handleShow","noteItem","Container","disableGutters","length","Card","CardContent","gutterBottom","component","breakpointCols","default","1100","700","500","columnClassName","Fab","Dialog","scroll","aria-labelledby","maxHeight","borderRadius","window","confirm","aria-hidden","DialogTitle","marginTop","placeholder","DialogContent","TextareaAutosize","DialogActions","opacity","left","top","height","Home","path","useRouteMatch","exact","Themeify","createMuiTheme","orange","blue","contrastThreshold","tonalOffset","ThemeProvider","defaultProps","App","isAuthenticated","setIsAuthenticated","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.12473cbc.chunk.js","sourcesContent":["const useLocalStore=()=>{\r\n    const setTokenToStore = (token)=>{\r\n        localStorage.setItem(\"_authToken\",token)\r\n    }\r\n    const getTokenFromStore = ()=>localStorage.getItem(\"_authToken\")\r\n    return {setTokenToStore,getTokenFromStore}\r\n}\r\nexport default useLocalStore","import { useState } from \"react\"\r\nimport useLocalStore from \"./useLocalStore\"\r\nimport axios from \"axios\"\r\nconst useAccount = () => {\r\n    const InitialState = {\r\n        _id: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        mobileNumber: \"\",\r\n        password: \"\",\r\n        profilePic: \"\"\r\n    }\r\n    const [user, setUser] = useState(InitialState)\r\n    const localStore = useLocalStore()\r\n    \r\n    const handleUserFieldChange = (e) => {\r\n        const { name, value } = e.target\r\n        setUser(prevUser => ({\r\n            ...prevUser,\r\n            [name]: value\r\n        }))\r\n    }\r\n    const handleSignUp = async () => {\r\n        return await axios.post('/api/users/add', user)\r\n            .then(res => {\r\n                 return res\r\n            }).catch(err=>console.log(err))\r\n    }\r\n    const handleSignIn = async () => {\r\n        return await axios.post('/api/account/login', user, { validateStatus: false })\r\n            .then(res => {\r\n                if(!res.data.user)  return res\r\n                localStore.setTokenToStore(res.data.accessToken)\r\n                setUser(res.data.user)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const authenticateUser = async () => {\r\n        const token = localStore.getTokenFromStore()\r\n        const authToken = `Bearer ${token}`\r\n        return await axios.get('/api/users/getUser', {\r\n            headers: {\r\n                authorization: authToken\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200)\r\n                setUser(res.data)\r\n            return res\r\n        }).catch(err =>{\r\n            console.clear()\r\n            console.log(err.response.data)\r\n        })\r\n    }\r\n    const handleProfilePicChange = (file) => {\r\n        const authToken = `Bearer ${localStore.getTokenFromStore()}`\r\n        let formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        axios.post('/api/users/uploadProPic', formData, {\r\n            validateStatus: false,\r\n            headers: {\r\n                authorization: authToken,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>{\r\n            if(res.status === 200){ \r\n                setUser(prevUser=>({...prevUser,profilePic:`${res.data}?_exc=${Date.now()}`}))\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const handleUpdateUser = async () => {\r\n        const authToken = `Bearer ${localStore.getTokenFromStore()}`\r\n        return await axios.post('/api/users/updateuser', user, {\r\n            validateStatus: false,\r\n            headers: {\r\n                authorization: authToken\r\n            }\r\n        }).then(res => res)\r\n            .catch(err => console.log(err))\r\n    }\r\n    const logOutUser = () => {\r\n        setUser(InitialState)\r\n        localStore.setTokenToStore(\"\")\r\n    }\r\n    \r\n    return { user,authenticateUser, handleUserFieldChange, handleSignUp, handleSignIn, handleUpdateUser, logOutUser, handleProfilePicChange }\r\n}\r\nexport default useAccount","import {useState} from \"react\"\r\nconst useLoadingState = (defaultLoadingState=false)=>{\r\n    const [isLoading, setIsLoading] = useState(defaultLoadingState)\r\n    return [isLoading, setIsLoading]\r\n}\r\n\r\nexport default useLoadingState","import {useState} from \"react\"\r\nconst useResponse = ()=>{\r\n    const [response, setResponse] = useState({})\r\n    return [response, setResponse]\r\n}\r\nexport default useResponse","import { useState } from \"react\"\r\nimport useLocalStore from \"./useLocalStore\"\r\nimport useLoadingState from \"./useLoadingState\"\r\nimport useResponse from \"./useResponse\"\r\nimport axios from \"axios\"\r\nconst useNotes = () => {\r\n    const InitialState = {\r\n        _id: \"\",\r\n        title: \"\",\r\n        body: \"\",\r\n        image: \"\",\r\n        noteColor: \"#FFFFFF\",\r\n        file: \"\",\r\n        isNotePicDeleted: false,\r\n        createdAt:\"\",\r\n        updatedAt:\"\",\r\n        creator:\"\"\r\n    }\r\n    const [notes, setNotes] = useState([])\r\n    const [note, setNote] = useState(InitialState)\r\n    const [isLoading, setIsLoading] = useLoadingState()\r\n    const [response, setResponse] = useResponse()\r\n    const localStore = useLocalStore()\r\n    const handleNoteFieldChange = (e) => {\r\n        const { name, value, type, files } = e.target\r\n        if (type === \"file\")\r\n            setNote(prevUser => ({\r\n                ...prevUser,\r\n                [name]: files[0]\r\n            }))\r\n        else\r\n            setNote(prevUser => ({\r\n                ...prevUser,\r\n                [name]: value\r\n            }))\r\n    }\r\n    const handleNoteFocus = (note = InitialState) => setNote(note)\r\n    const loadNotes = async () => {\r\n        const token = localStore.getTokenFromStore()\r\n        const authToken = `Bearer ${token}`\r\n        return await axios.get('/api/notes/', {\r\n            headers: {\r\n                authorization: authToken\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200)\r\n                setNotes(res.data)\r\n            return res\r\n        }).catch(err => err)\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n    const addEditNotes = async () => {\r\n        const token = localStore.getTokenFromStore()\r\n        const authToken = `Bearer ${token}`\r\n        let formData = new FormData()\r\n        formData.append('_id', note._id)\r\n        formData.append('title', note.title)\r\n        formData.append('body', note.body)\r\n        formData.append('image', note.image)\r\n        formData.append('noteColor', note.noteColor)\r\n        formData.append('isNotePicDeleted', note.isNotePicDeleted)\r\n        formData.append(\"file\", note.file)\r\n        return await axios.post('/api/notes/addEditNote', formData, {\r\n            validateStatus: false,\r\n            headers: {\r\n                authorization: authToken,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => {\r\n            return res\r\n        }).catch(err => console.log(err))\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n    const deleteNote = async () => {\r\n        const token = localStore.getTokenFromStore()\r\n        const authToken = `Bearer ${token}`\r\n        return await axios.post('/api/notes/deleteNote', note, {\r\n            validateStatus: false,\r\n            headers: {\r\n                authorization: authToken\r\n            }\r\n        }).then(res => {\r\n            return res\r\n        }).catch(err => console.log(err))\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n    const handlenotePicDelete = (val = true) => {\r\n        if(val===true){\r\n            setNote(prevNote => ({\r\n                ...prevNote,\r\n                file: \"\",\r\n                isNotePicDeleted: val\r\n            }))\r\n        }\r\n        else{\r\n            setNote(prevNote => ({\r\n                ...prevNote,\r\n                isNotePicDeleted: val\r\n            }))\r\n        }\r\n        \r\n    }\r\n    const resetResponse = () => {\r\n        setResponse({})\r\n    }\r\n\r\n    return { notes, note, response, isLoading, loadNotes, resetResponse, handleNoteFieldChange, handlenotePicDelete, handleNoteFocus, addEditNotes, deleteNote }\r\n}\r\nexport default useNotes","import { useState } from \"react\"\r\n\r\nconst useAppTheme = (type=\"dark\")=>{\r\n    const [appTheme,setAppTheme] = useState(type)\r\n    return {appTheme,setAppTheme}\r\n}\r\nexport default useAppTheme","import React from \"react\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport useAccount from \"./hooks/useAccount\"\r\nimport useLocalStore from \"./hooks/useLocalStore\"\r\nimport useNotes from \"./hooks/useNotes\"\r\nimport useAppTheme from \"./hooks/useAppTheme\"\r\nconst Context = React.createContext()\r\n\r\nconst ContextProvider = (props) => {\r\n    const {register,handleSubmit,errors} = useForm()\r\n    const accountObj = useAccount()\r\n    const localStoreObj = useLocalStore()\r\n    const notesObj = useNotes()\r\n    const appThemeObj = useAppTheme()\r\n    return (\r\n        <Context.Provider value={{accountObj,localStoreObj,notesObj,appThemeObj,register,handleSubmit,errors}}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { ContextProvider, Context }","import { makeStyles } from '@material-ui/core/styles'\r\nimport { red } from '@material-ui/core/colors'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  invalid: {\r\n    color: red[500]\r\n  },\r\n  primarytheme: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  textField: {\r\n    color: theme.palette.type === \"dark\" ? \"#FFFFFF!important\" : \"#000000!important\"\r\n  },\r\n  btnUploadProfilePic: {\r\n    padding: 10,\r\n    position: \"absolute\",\r\n    background: theme.palette.type === \"dark\" ? \"#000000!important\" : \"#ffffff!important\",\r\n    boxShadow: \"0 5px 15px -8px rgba(0, 0, 0, 0.24), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  infocardRoot: {\r\n    maxWidth: 345,\r\n    textAlign: \"center\",\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  infocardavatar: {\r\n    width: 100,\r\n    filter: 'grayscale(100%)'\r\n  },\r\n  notecardRoot: {\r\n    maxWidth: 345\r\n  },\r\n  card_content: {\r\n    color: '#000000!important'\r\n  }\r\n}))\r\nexport default useStyles","import React, { useContext } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { TextField, Grid, Button,useTheme } from \"@material-ui/core\"\r\nimport {Alert} from \"@material-ui/lab\"\r\nimport Logo from \"../assets/images/logo.svg\"\r\nimport { Context } from \"../context\"\r\nimport useResponse from \"../hooks/useResponse\"\r\nimport useStyles from \"../hooks/useStyles\"\r\n\r\nconst Login = () => {\r\n    const { accountObj, register, handleSubmit, errors } = useContext(Context)\r\n    const { user, handleUserFieldChange, handleSignIn } = accountObj\r\n    const [response, setResponse] = useResponse()\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const login = async () => {\r\n        var res = await handleSignIn()\r\n        res && setResponse(res)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                user._id ? <Redirect to=\"/\" /> : (\r\n                    <div className=\"limiter\">\r\n                        <div className={`container-login100-${theme.palette.type}`}>\r\n                            <div className=\"wrap-login100\">\r\n                                <form name=\"login_form\" className=\"login100-form validate-form\" noValidate>\r\n                                    <div className=\"login100-form-avatar\">\r\n                                        <img src={Logo} alt=\"AVATAR\" />\r\n                                    </div>\r\n\r\n                                    <span className=\"login100-form-title p-t-20 p-b-20\">\r\n                                        Welcome\r\n                                    </span>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Email\" type=\"email\" name=\"email\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"Email is required\" },\r\n                                                        pattern: { value: /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/i, message: \"Enter a valid Email ID\" }\r\n                                                    })}\r\n                                                    error={!!errors.email} />\r\n                                                {errors.email && <span className={classes.invalid}>{errors.email.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Password\" type=\"password\" name=\"password\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"Password is required\" }\r\n                                                    })}\r\n                                                    error={!!errors.password} />\r\n                                                {errors.password && <span className={classes.invalid}>{errors.password.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <div className=\"container-login100-form-btn m-t-30\">\r\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth type=\"button\" onClick={handleSubmit(login)}>\r\n                                            Login\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"text-center w-full m-t-30\">\r\n                                        <span style={{color:theme.palette.text.primary}}>Don't have an account?&nbsp;\r\n                                            <Link to=\"/register\">\r\n                                                <b>Sign Up</b>\r\n                                            </Link>\r\n                                        </span>\r\n                                    </div>\r\n                                    {response.data && <Alert className=\"text-center w-full m-t-30\" severity=\"error\" variant=\"filled\" elevation={6}>{response.data}</Alert>}\r\n                                    \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useContext } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { TextField, Grid, Button, useTheme } from \"@material-ui/core\"\r\nimport {Alert} from \"@material-ui/lab\"\r\nimport { Context } from \"../context\"\r\nimport Logo from \"../assets/images/logo.svg\"\r\nimport useResponse from \"../hooks/useResponse\"\r\nimport useStyles from \"../hooks/useStyles\"\r\nconst Register = () => {\r\n    const { accountObj, register, handleSubmit, errors } = useContext(Context)\r\n    const { user, handleSignUp, handleUserFieldChange } = accountObj\r\n    const [response, setResponse] = useResponse()\r\n    const signup = async () => {\r\n        var res = await handleSignUp()\r\n        res && setResponse(res)\r\n    }\r\n    const classes = useStyles()\r\n    const theme= useTheme()\r\n    return (\r\n        <>\r\n            {\r\n                user._id ? <Redirect to=\"/\" /> : response.status === 200 ?\r\n                    <>\r\n                        {alert(response.data)}\r\n                        <Redirect to=\"/login\" />\r\n                    </> :\r\n                    <div className=\"limiter\">\r\n                        <div className={`container-login100-${theme.palette.type}`}>\r\n                            <div className=\"wrap-login100\">\r\n                                <form name=\"signup_form\" className=\"login100-form validate-form\" noValidate>\r\n                                    <div className=\"login100-form-avatar\">\r\n                                        <img src={Logo} alt=\"AVATAR\" />\r\n                                    </div>\r\n\r\n                                    <span className=\"login100-form-title p-t-20 p-b-45\">\r\n                                        Welcome\r\n                                </span>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"First Name *\" type=\"text\" name=\"firstName\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"First Name is required\" },\r\n                                                        maxLength: { value: 20, message: \"Enter a value less than 20 characters\" },\r\n                                                        minLength: { value: 3, message: \"Enter at least 3 characters\" }\r\n                                                    })}\r\n                                                    error={!!errors.firstName} />\r\n                                                {errors.firstName && <span className={classes.invalid}>{errors.firstName.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Last Name\" type=\"text\" name=\"lastName\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register} />\r\n                                            </>\r\n                                        </Grid>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Email ID *\" type=\"email\" name=\"email\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"Email is required\" },\r\n                                                        pattern: { value: /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/i, message: \"Enter a valid Email ID\" }\r\n                                                    })}\r\n                                                    error={!!errors.email} />\r\n                                                {errors.email && <span className={classes.invalid}>{errors.email.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Mobile Number *\" type=\"text\" name=\"mobileNumber\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"Mobile Number is required\" },\r\n                                                        pattern: { value: /^[6-9]\\d{9}$/i, message: \"Enter a valid Mobile Number\" }\r\n                                                    })}\r\n                                                    error={!!errors.mobileNumber} />\r\n                                                {errors.mobileNumber && <span className={classes.invalid}>{errors.mobileNumber.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                        <Grid container item lg={12}>\r\n                                            <>\r\n                                                <TextField fullWidth label=\"Password *\" type=\"password\" name=\"password\"\r\n                                                    onChange={handleUserFieldChange}\r\n                                                    inputRef={register({\r\n                                                        required: { value: true, message: \"Password is required\" },\r\n                                                        pattern: { value: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i, message: \"Password must be of atleast 8 characters, containing a letter, a number and one special character\" }\r\n                                                    })}\r\n                                                    error={!!errors.password} />\r\n                                                {errors.password && <span className={classes.invalid}>{errors.password.message}</span>}\r\n                                            </>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <div className=\"container-login100-form-btn m-t-30\">\r\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth type=\"button\" onClick={handleSubmit(signup)}>\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"text-center w-full m-t-30\">\r\n                                        <span style={{color:theme.palette.text.primary}}>Already have an account?&nbsp;\r\n                                            <Link to=\"/login\">\r\n                                                <b>Login</b>\r\n                                            </Link>\r\n                                        </span>\r\n                                    </div>\r\n                                    {response.data && <Alert className=\"text-center w-full m-t-30\" severity=\"error\" variant=\"filled\" elevation={6}>{response.data}</Alert>}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useContext, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { AppBar, Toolbar, Typography, IconButton, Menu, MenuItem, Avatar } from \"@material-ui/core\"\r\nimport { Context } from \"../context\"\r\nimport Logo from \"../assets/images/logo.svg\"\r\nimport defaultImg from \"../assets/images/user.svg\"\r\nimport useStyles from \"../hooks/useStyles\"\r\nconst Header = () => {\r\n    const { accountObj,appThemeObj } = useContext(Context)\r\n    const { user, logOutUser } = accountObj\r\n    const {appTheme,setAppTheme} = appThemeObj\r\n    const profileImage = user.profilePic.trim() !== \"\" ? `/uploads/profileImg/${user.profilePic}` : defaultImg\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const classes = useStyles()\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const toogleTheme = ()=>{\r\n        setAppTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\")\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                    <Link edge=\"start\" color=\"inherit\" aria-label=\"menu\" to=\"/\">\r\n                        <Avatar src={Logo}/>\r\n                    </Link>\r\n                    <Typography variant=\"h6\" className={classes.title} style={{marginLeft:20}}>\r\n                        Keep Note\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"theme of current user\"\r\n                            aria-haspopup=\"false\"\r\n                            onClick={toogleTheme}\r\n                            color=\"inherit\">\r\n                            <i class={`fas fa-${appTheme===\"light\"?\"moon\":\"sun\"}`}></i>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\">\r\n                            <Avatar src={profileImage}/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}>\r\n                            <MenuItem onClick={handleClose}>\r\n                                <Link className={classes.title} to=\"/profile\"><i className=\"fa fa-user\"></i> &nbsp;Profile</Link>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleClose}>\r\n                                <div onClick={logOutUser}>\r\n                                    <i className=\"fa fa-power-off\"></i> &nbsp;Logout\r\n                                </div>\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React, { useState, useContext, useRef } from \"react\"\r\nimport { Context } from \"../context\"\r\nimport defaultImg from \"../assets/images/user.svg\"\r\nimport { Grid, TextField, Paper, Button, CssBaseline, IconButton } from \"@material-ui/core\"\r\nimport useStyles from \"../hooks/useStyles\"\r\n\r\nconst Profile = () => {\r\n    const { accountObj, register, handleSubmit, errors } = useContext(Context)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n    const { user, handleProfilePicChange, handleUpdateUser, handleUserFieldChange } = accountObj\r\n    const profileImage = user.profilePic !== \"\" ? `/uploads/profileImg/${user.profilePic}` : defaultImg\r\n    const [profilePic, setProfilePic] = useState(profileImage)\r\n    const fuRef = useRef()\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        const fileNameregex = /(\\.jpg|\\.jpeg|\\.png)$/i;\r\n        const fileSize = Math.round((file.size / 1024));\r\n        if (!fileNameregex.exec(file.name)) {\r\n            alert(\"File extension not supported!\");\r\n            fuRef.current.value = \"\"\r\n        } else if (fileSize >= 2048) {\r\n            alert(\"File too Big, please select a file less than 2 MB\");\r\n            fuRef.current.value = \"\"\r\n        } else if (fileSize < 0) {\r\n            alert(\"File is empty\");\r\n            fuRef.current.value = \"\"\r\n        } else {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onloadend = () => setProfilePic([reader.result])\r\n            handleProfilePicChange(file)\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    const updateUser = (e) => {\r\n        handleUpdateUser()\r\n            .then(res => {\r\n                alert(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n            .finally(() => setIsDisabled(true))\r\n    }\r\n    const handleFieldChange = (e) => {\r\n        setIsDisabled(false)\r\n        handleUserFieldChange(e)\r\n    }\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <div className=\"profile-page\">\r\n                <div className=\"page-header header-filter\" data-parallax=\"true\"></div>\r\n                <Paper className={`main main-raised ${classes.paper}`} elevation={6}>\r\n                    <div className=\"profile\">\r\n                        <div className=\"avatar\">\r\n                            <img src={profilePic} alt=\"Circle\" className=\"img-raised rounded-circle img-fluid\" />\r\n                            <input type=\"file\" accept=\"image/*\" name=\"myfile\" ref={fuRef} onChange={handleFileChange} hidden />\r\n                            <IconButton aria-label=\"upload picture\" className={`${classes.btnUploadProfilePic} btnUploadImageTransform`}\r\n                                    size=\"small\"\r\n                                    onClick={() => { fuRef.current.click() }}>\r\n                                    <i className=\"fa fa-camera\"></i>\r\n                                </IconButton>\r\n                        </div>\r\n                        <Grid container spacing={10} className=\"p-l-40 p-r-40\">\r\n                            <Grid container item lg={6}>\r\n                                <>\r\n                                    <TextField fullWidth label=\"First Name\" type=\"text\" name=\"firstName\"\r\n                                        defaultValue={user.firstName}\r\n                                        onChange={handleFieldChange}\r\n                                        inputRef={register({\r\n                                            required: { value: true, message: \"First Name is required\" },\r\n                                            maxLength: { value: 20, message: \"Enter a value less than 20 characters\" },\r\n                                            minLength: { value: 3, message: \"Enter at least 3 characters\" }\r\n                                        })}\r\n                                        error={!!errors.firstName} />\r\n                                    {errors.firstName && <span className={classes.invalid}>{errors.firstName.message}</span>}\r\n                                </>\r\n                            </Grid>\r\n                            <Grid container item lg={6}>\r\n                                <>\r\n                                    <TextField fullWidth label=\"Last Name\" type=\"text\" name=\"lastName\"\r\n                                        defaultValue={user.lastName}\r\n                                        onChange={handleFieldChange}\r\n                                        inputRef={register} />\r\n                                </>\r\n                            </Grid>\r\n                            <Grid container item lg={6}>\r\n                                <>\r\n                                    <TextField fullWidth label=\"Email ID\" type=\"email\" name=\"email\"\r\n                                        defaultValue={user.email}\r\n                                        onChange={handleFieldChange}\r\n                                        inputRef={register({\r\n                                            required: { value: true, message: \"Email is required\" },\r\n                                            pattern: { value: /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/i, message: \"Enter a valid Email ID\" }\r\n                                        })}\r\n                                        error={!!errors.email} disabled={true} />\r\n                                    {errors.email && <span className={classes.invalid}>{errors.email.message}</span>}\r\n                                </>\r\n                            </Grid>\r\n                            <Grid container item lg={6}>\r\n                                <>\r\n                                    <TextField fullWidth label=\"Mobile Number\" type=\"text\" name=\"mobileNumber\"\r\n                                        defaultValue={user.mobileNumber}\r\n                                        onChange={handleFieldChange}\r\n                                        inputRef={register({\r\n                                            required: { value: true, message: \"Mobile Number is required\" },\r\n                                            pattern: { value: /^[6-9]\\d{9}$/i, message: \"Enter a valid Mobile Number\" }\r\n                                        })}\r\n                                        error={!!errors.mobileNumber} />\r\n                                    {errors.mobileNumber && <span className={classes.invalid}>{errors.mobileNumber.message}</span>}\r\n                                </>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <div className=\"container-login100-form-btn m-t-30 m-b-10\">\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"button\" size=\"medium\" disabled={isDisabled} onClick={handleSubmit(updateUser)}>\r\n                                Save Changes\r\n                        </Button>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Profile","import React, { useEffect, useState, useContext, useRef } from \"react\"\r\nimport { Dialog, DialogActions, DialogTitle, DialogContent, Button, IconButton, CssBaseline, Container, Typography, Card, CardContent, Fab, TextareaAutosize } from \"@material-ui/core\"\r\nimport Masonry from 'react-masonry-css'\r\nimport { Context } from \"../context\"\r\nimport useStyles from \"../hooks/useStyles\"\r\nimport Logo from \"../assets/images/logo.svg\"\r\nconst NoteItem = (props) => {\r\n    const { title, body, image, noteColor } = props.note\r\n    const noteImg = `/uploads/notePics/${image}`\r\n    return (\r\n        <div className=\"customBox\" style={{ background: noteColor }}>\r\n            <p hidden={!image}><img className=\"image\" hidden={!image} src={image && noteImg} alt=\"none\" /></p>\r\n            <h2 className=\"title\">{title}</h2>\r\n            <p className=\"body\">{body}</p>\r\n        </div>\r\n    )\r\n}\r\nconst Notes = () => {\r\n    const { notesObj } = useContext(Context)\r\n    const { notes, note, loadNotes, handleNoteFieldChange, handleNoteFocus, handlenotePicDelete, addEditNotes, deleteNote } = notesObj\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const colRef = useRef(null)\r\n    const fileRef = useRef(null)\r\n    const [notePic, setNotePic] = useState('')\r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        1100: 3,\r\n        700: 2,\r\n        500: 1\r\n    };\r\n    const getNotes = () => {\r\n        loadNotes()\r\n    }\r\n    const classes = useStyles()\r\n    useEffect(getNotes, [])\r\n\r\n\r\n    const noteItems = notes.sort((a,b)=>(new Date(b.updatedAt)) - (new Date(a.updatedAt))).map(item => <div key={item._id} onClick={() => handleShow(item)}><NoteItem note={item} /></div>)\r\n    const handleShow = (noteItem) => {\r\n        handleNoteFocus(noteItem)\r\n        setNotePic(noteItem ? noteItem.image && `/uploads/notePics/${noteItem.image}` : \"\")\r\n        setShow(true)\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        const fileNameregex = /(\\.jpg|\\.jpeg|\\.png)$/i;\r\n        const fileSize = Math.round((file.size / 1024));\r\n        if (!fileNameregex.exec(file.name)) {\r\n            alert(\"File extension not supported!\");\r\n            fileRef.current.value = \"\"\r\n        } else if (fileSize >= 2048) {\r\n            alert(\"File too Big, please select a file less than 2 MB\");\r\n            fileRef.current.value = \"\"\r\n        } else if (fileSize < 0) {\r\n            alert(\"File is empty\");\r\n            fileRef.current.value = \"\"\r\n        } else {\r\n            handleNoteFieldChange(e)\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onloadend = () => {\r\n                setNotePic([reader.result])\r\n                handlenotePicDelete(false)\r\n            }\r\n        }\r\n    }\r\n    const deleteNotePic = () => {\r\n        fileRef.current.value = \"\"\r\n        handlenotePicDelete()\r\n        setNotePic(\"\")\r\n    }\r\n    return <>\r\n\r\n        <CssBaseline />\r\n        <Container maxWidth=\"xl\" disableGutters style={{ padding: 20 }}>\r\n            {\r\n                !notes.length && (\r\n                    <Card className={classes.infocardRoot}>\r\n                        <CardContent>\r\n                            <img src={Logo} className={classes.infocardavatar} alt=\"Avatar\" />\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                No Notes\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"textSecondary\" component=\"p\">\r\n                                You don't have any notes. Click Add to create one.\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n            }\r\n            <Masonry\r\n                breakpointCols={breakpointColumnsObj}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {noteItems}\r\n            </Masonry>\r\n            <Fab color=\"primary\" className={classes.fab} onClick={() => handleShow()} title=\"Add a note\">\r\n                <i className=\"fas fa-plus\" />\r\n            </Fab>\r\n            <Dialog fullWidth scroll=\"body\"\r\n                open={show}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"responsive-dialog-title\">\r\n                <div hidden={!notePic} style={{ position: \"relative\" }}>\r\n                    <img src={notePic} alt=\"none\" style={{ width: \"100%\", maxHeight: \"100%\", borderRadius: \"5px 5px 0 0\" }} />\r\n                    <IconButton size=\"small\" className=\"btnNoteImgDel\" onClick={() => {\r\n                        if (window.confirm('Are you sure?')) {\r\n                            deleteNotePic()\r\n                        }\r\n                    }}><i className=\"fas fa-trash\" aria-hidden=\"true\"></i></IconButton>\r\n                </div>\r\n                <DialogTitle id=\"responsive-dialog-title\" style={{ background: note.noteColor, marginTop: -4 }}>\r\n                    <input className=\"innerForm title\" type=\"text\" name=\"title\" value={note.title} onChange={handleNoteFieldChange} placeholder=\"Title\" />\r\n                </DialogTitle>\r\n                <DialogContent style={{ background: note.noteColor }}>\r\n                    <TextareaAutosize aria-label=\"maximum height\" className=\"innerForm\" name=\"body\" value={note.body}\r\n                        onChange={handleNoteFieldChange}\r\n                        placeholder=\"Take a note...\" />\r\n                </DialogContent>\r\n                <DialogActions style={{ background: note.noteColor }}>\r\n                    <div className=\"iconArea\">\r\n                        <div className=\"icon\" style={{ position: \"relative\", display: \"inline-block\" }}>\r\n                            <IconButton onClick={() => { colRef.current.click() }}><i className=\"fas fa-palette\" aria-hidden=\"true\"></i></IconButton>\r\n                            <input type=\"color\" ref={colRef} style={{ opacity: 0, position: \"absolute\", left: 0, top: 0, width: 0, height: 0 }} name=\"noteColor\" value={note.noteColor} onChange={handleNoteFieldChange} />\r\n                        </div>\r\n                        <div className=\"icon\" style={{ position: \"relative\", display: \"inline-block\" }}>\r\n                            <input type=\"file\" accept=\"image/*\" ref={fileRef} hidden={true} name=\"file\" files={note.file} onChange={handleFileChange} />\r\n                            <IconButton onClick={() => { fileRef.current.click() }}><i className=\"fas fa-image\" aria-hidden=\"true\"></i></IconButton>\r\n                        </div>\r\n                        <IconButton className=\"icon\" style={{ display: !note._id && \"none\" }} onClick={() => {\r\n                            if (window.confirm('Are you sure?')) {\r\n                                deleteNote().then(() => loadNotes())\r\n                                handleClose()\r\n                            }\r\n                        }}><i className=\"fas fa-trash\" aria-hidden=\"true\"></i></IconButton>\r\n                        <Button className=\"rightIcon\" style={{ display: !(`${note.title}${note.body}`) && \"none\" }} onClick={() => {\r\n                            addEditNotes().then(() => loadNotes())\r\n                            handleClose()\r\n                        }}>Save &amp; Close</Button>\r\n                        <div style={{ clear: \"both\" }}></div>\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n\r\n    </>\r\n}\r\nexport default Notes","import React, { useContext } from \"react\"\r\nimport { Redirect, Switch,Route,useRouteMatch } from \"react-router-dom\"\r\nimport { Context } from \"../context\"\r\nimport \"../assets/css/style.css\"\r\n\r\nimport Header from \"./Header\"\r\nimport Profile from \"./Profile\"\r\nimport Notes from \"./Notes\"\r\nconst Home = () => {\r\n    const { accountObj } = useContext(Context)\r\n    const { user } = accountObj\r\n    let { path } = useRouteMatch();\r\n    return (\r\n        <>\r\n            {\r\n                user._id ?\r\n                <>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route exact path={path}>\r\n                            <Notes/>\r\n                        </Route>\r\n                        <Route path=\"/profile\">\r\n                            <Profile/>\r\n                        </Route>\r\n                    </Switch>\r\n                </> :\r\n                <Redirect to=\"/login\" />\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Home","import React from \"react\"\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nimport {blue,orange} from '@material-ui/core/colors'\r\n\r\nconst Themeify = (props) => {\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type:props.type,\r\n            primary: {\r\n              // light: will be calculated from palette.primary.main,\r\n              main: orange[800],\r\n              // dark: will be calculated from palette.primary.main,\r\n              // contrastText: will be calculated to contrast with palette.primary.main\r\n            },\r\n            secondary: {\r\n              main: blue[500],\r\n            },\r\n            // Used by `getContrastText()` to maximize the contrast between\r\n            // the background and the text.\r\n            contrastThreshold: 3,\r\n            // Used by the functions below to shift a color's luminance by approximately\r\n            // two indexes within its tonal palette.\r\n            // E.g., shift from Red 500 to Red 300 or Red 700.\r\n            tonalOffset: 0.2,\r\n          }\r\n    })\r\n    return (\r\n        <ThemeProvider theme={theme}> \r\n            {props.children}\r\n        </ThemeProvider>\r\n    )\r\n}\r\nThemeify.defaultProps={\r\n  type:\"dark\"\r\n}\r\nexport default Themeify","import React, { useEffect, useContext, useState } from \"react\"\r\nimport Login from \"./components/Login\"\r\nimport Register from \"./components/Register\"\r\nimport Home from \"./components/Home\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport \"./assets/css/style.css\"\r\nimport \"./assets/css/util.css\"\r\nimport { Context } from \"./context\"\r\nimport Themeify from \"./Themeify\"\r\nconst App = () => {\r\n    const { accountObj,appThemeObj } = useContext(Context)\r\n    const { authenticateUser } = accountObj\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const authUser = () => {\r\n        authenticateUser()\r\n            .then(() => {\r\n                setIsAuthenticated(true)\r\n            })\r\n    }\r\n\r\n    useEffect(authUser, [isAuthenticated])\r\n    return (\r\n        <>\r\n            {\r\n                !isAuthenticated ? \"Loading...\" : (\r\n                    <Themeify type={appThemeObj.appTheme}>\r\n                        <Router>\r\n                            <Switch>\r\n                                <Route path=\"/login\">\r\n                                    <Login />\r\n                                </Route>\r\n                                <Route path=\"/register\">\r\n                                    <Register />\r\n                                </Route>\r\n                                <Route path=\"/\">\r\n                                    <Home />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Router>\r\n                    </Themeify>\r\n                )\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { ContextProvider } from \"./context\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n            <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.c67a6698.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6308a452.svg\";"],"sourceRoot":""}